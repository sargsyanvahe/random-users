{"version":3,"sources":["components/Header/Header.js","redux/actions/filterActions.js","redux/actions/usersActions.js","components/MainList/ListItem.js","components/MainList/Loader.js","nationalities.js","components/MainList/NatContainer.js","pages/MainPage.js","components/EditList/ListItem.js","pages/EditPage.js","components/Modal/Modal.js","App.js","redux/reducers/filterReducer.js","redux/reducers/usersReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["withRouter","connect","state","searchValue","search","dispatch","onSearchChange","value","type","setSearchValue","props","pathname","location","history","className","onClick","push","onChange","target","placeholder","closeInfoModal","openModal","user","openInfoModal","style","cursor","name","first","last","nat","Loader","nationalities","addNation","check","addNationality","onCheckChange","e","checked","map","i","key","htmlFor","users","loading","page","filter","selectedNations","nations","fetchUsers","fetch","then","res","json","data","results","catch","error","Error","handleScroll","useCallback","window","innerHeight","document","documentElement","scrollTop","scrollHeight","console","log","useEffect","addEventListener","removeEventListener","filtered","natFilter","searchCheck","toLowerCase","includes","length","changeNation","mail","email","defaultValue","closeModal","body","overflow","currentTarget","src","picture","large","alt","city","country","postcode","selectedUser","exact","from","to","path","component","MainPage","EditPage","initialState","openedModal","combineReducers","action","item","idx","findIndex","newUsers","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.88fd1c4d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setSearchValue } from \"../../redux/actions\";\r\n\r\nimport './Header.css'\r\n\r\nconst Header = (props) => {\r\n\r\n    const { location: { pathname }, history, onSearchChange, searchValue } = props;\r\n\r\n    const onHandlePageChange = () => {\r\n        history.push(pathname === '/main' ? '/edit' : 'main')\r\n    };\r\n\r\n    return (\r\n        <div className='header'>\r\n            <button onClick={onHandlePageChange} className=\"ui button\">\r\n                {`Go to ${pathname === '/main' ? 'Edit' : 'Main'} Page`}\r\n            </button>\r\n            {pathname === '/main' && <div className=\"ui search\">\r\n                <div className=\"ui icon input\">\r\n                    <input onChange={({ target }) => onSearchChange(target.value)}\r\n                           className=\"prompt\" type=\"text\"\r\n                           value={searchValue}\r\n                           placeholder=\"Search\"/>\r\n                    <i className=\"search icon\"/>\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({ searchValue: state.search })\r\nconst mapDispatchToProps = dispatch => ({ onSearchChange: (value) => dispatch(setSearchValue(value)) });\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Header));","export const SEARCH_VALUE = 'SEARCH_VALUE';\r\nexport const ADD_NATION = 'ADD_NATION';\r\n\r\nexport const setSearchValue = value => ({ type: SEARCH_VALUE, value });\r\nexport const addNationality = (nat,check) => ({ type: ADD_NATION, nat,check })","export const FETCH_USERS_REQUEST = 'FETCH_USERS_REQUEST';\r\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS';\r\nexport const CHANGE_NATION = 'CHANGE_NATION';\r\nexport const OPEN_INFO_MODAL = 'OPEN_INFO_MODAL'\r\nexport const CLOSE_INFO_MODAL = 'CLOSE_INFO_MODAL'\r\n\r\nexport const fetchUsersSuccess = users => ({ type: FETCH_USERS_SUCCESS, users });\r\nexport const changeNation = (mail, nat) => ({ type: CHANGE_NATION, mail, nat });\r\nexport const openInfoModal = user => ({ type: OPEN_INFO_MODAL, user });\r\nexport const closeInfoModal = ({ type: CLOSE_INFO_MODAL });\r\n\r\nexport const fetchUsers = (page) => dispatch => {\r\n    dispatch({ type: FETCH_USERS_REQUEST, loading: true })\r\n    fetch(`https://randomuser.me/api/?page=${page}&results=20&seed=abc`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            dispatch(fetchUsersSuccess(data.results))\r\n        })\r\n        .catch((error) => {\r\n            throw new Error(error)\r\n        })\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { openInfoModal } from \"../../redux/actions/usersActions\";\r\n\r\nconst ListItem = ({ user, openModal }) => {\r\n    return (\r\n        <tr style={{cursor: 'pointer'}} onClick={() => openModal(user)}>\r\n            <td>{user.name.first}</td>\r\n            <td>{user.name.last}</td>\r\n            <td>{user.nat}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({ openModal: user => dispatch(openInfoModal(user)) })\r\n\r\nexport default connect(null, mapDispatchToProps)(ListItem);","import React from \"react\";\r\n\r\nimport './MainList.css'\r\n\r\nconst Loader = () => {\r\n  return(\r\n      <div className=\"ui active inverted dimmer loader-container\">\r\n          <div className=\"ui text loader\"/>\r\n      </div>\r\n  )\r\n};\r\n\r\nexport default Loader","export const nationalities = ['AU', 'BR', 'CA', 'CH', 'DE', 'DK', 'ES', 'FI', 'FR', 'GB', 'IE', 'IR', 'NL', 'NZ', 'TR', 'US'];\r\n","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { addNationality } from \"../../redux/actions/filterActions\";\r\n\r\nimport { nationalities } from \"../../nationalities\";\r\n\r\nconst NatContainer = ({ addNation }) => {\r\n\r\n    const onCheckChange = (e) => {\r\n        addNation(e.target.name, e.target.checked)\r\n    };\r\n\r\n    return (\r\n        <div className='nat-container'>\r\n            {nationalities.map((nat, i) => (\r\n                <div key={i} className=\"ui checkbox\">\r\n                    <input type=\"checkbox\" onChange={onCheckChange} name={nat}/>\r\n                    <label htmlFor={nat}>{nat}</label>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addNation: (nat, check) => dispatch(addNationality(nat, check))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(NatContainer);","import React, { useCallback, useEffect } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUsers } from \"../redux/actions/usersActions\";\r\n\r\nimport ListItem from \"../components/MainList/ListItem\";\r\nimport Loader from \"../components/MainList/Loader\";\r\nimport NatContainer from \"../components/MainList/NatContainer\";\r\n\r\nimport '../components/MainList/MainList.css'\r\n\r\nconst MainPage = ({ loading, page, fetchUsers, users, searchValue, selectedNations }) => {\r\n\r\n    const handleScroll = useCallback(() => {\r\n        if (window.innerHeight + document.documentElement.scrollTop + 1 >= document.documentElement.scrollHeight && !loading) {\r\n            console.log(page + 1);\r\n            fetchUsers(page + 1)\r\n        }\r\n    },[fetchUsers,loading,page]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n        return () => window.removeEventListener('scroll', handleScroll);\r\n    }, [handleScroll]);\r\n\r\n    useEffect(() => {\r\n        if (page === 1) fetchUsers(page);\r\n    }, [page,fetchUsers]);\r\n\r\n    const filtered = users.filter(user => {\r\n\r\n        const searchCheck = user.name.first.toLowerCase().includes(searchValue.toLowerCase()) || user.name.last.toLowerCase().includes(searchValue.toLowerCase())\r\n        let natFilter;\r\n\r\n        if (!selectedNations.length) {\r\n            natFilter = true\r\n        } else {\r\n            natFilter = selectedNations.includes(user.nat);\r\n        }\r\n\r\n        return searchCheck && natFilter;\r\n\r\n    });\r\n\r\n\r\n    return (\r\n        <div className='main-list'>\r\n            <NatContainer/>\r\n            <table className=\"ui celled table\">\r\n                <thead>\r\n                <tr>\r\n                    <th>First</th>\r\n                    <th>Last</th>\r\n                    <th>Nationality</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {filtered && filtered.map((user, i) => <ListItem key={i} user={user}/>)}\r\n                </tbody>\r\n            </table>\r\n            {loading && <Loader/>}\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchUsers: (page) => dispatch(fetchUsers(page))\r\n});\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users.users,\r\n        loading: state.users.loading,\r\n        page: state.users.page,\r\n        searchValue: state.filter.searchValue,\r\n        selectedNations: state.filter.nations\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { changeNation } from \"../../redux/actions/usersActions\";\r\n\r\nimport { nationalities } from \"../../nationalities\";\r\n\r\nconst ListItem = ({ user,changeNation }) => {\r\n\r\n    const onNatChange = (e) => {\r\n        const {value} = e.target;\r\n        changeNation(user.email,value);\r\n    };\r\n\r\n    return (\r\n        <tr>\r\n            <td>{user.name.first}</td>\r\n            <td>{user.name.last}</td>\r\n            <td>\r\n                <select onChange={onNatChange} defaultValue={user.nat} className=\"ui dropdown\">\r\n                    {nationalities.map((nat, i) => <option key={i} value={nat}>{nat}</option>)}\r\n                </select>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({changeNation: (mail,nat)=> dispatch(changeNation(mail,nat))})\r\n\r\nexport default connect(null,mapDispatchToProps)(ListItem);","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ListItem from \"../components/EditList/ListItem\";\r\n\r\nconst EditPage = ({users}) => {\r\n    return (\r\n        <div className='main-list'>\r\n            <table className=\"ui celled table\">\r\n                <thead>\r\n                <tr>\r\n                    <th>First</th>\r\n                    <th>Last</th>\r\n                    <th>Nationality</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {users && users.map((user, i) => <ListItem key={i} user={user}/>)}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({ users: state.users.users })\r\n\r\nexport default connect(mapStateToProps)(EditPage);","import React, { useEffect } from \"react\";\r\n\r\nimport './Modal.css'\r\nimport { connect } from \"react-redux\";\r\nimport { closeInfoModal } from \"../../redux/actions/usersActions\";\r\n\r\nconst Modal = ({ user,closeModal }) => {\r\n\r\n\r\n    const onOutSideModalClick = (e) => {\r\n        if(e.target !== e.currentTarget) return;\r\n        closeModal()\r\n    }\r\n\r\n    useEffect(()=> {\r\n        window.document.body.style.overflow = 'hidden';\r\n        return () => {\r\n            window.document.body.style.overflow = 'scroll'\r\n        }\r\n    },[]);\r\n\r\n    return (\r\n        <div onClick={onOutSideModalClick} className='modal-container'>\r\n            <div className=\"ui modal\">\r\n                <img src={user.picture.large} alt=\"not found\"/>\r\n                <h2>{`${user.name.first} ${user.name.last}`}</h2>\r\n                <h3>{`city: ${user.location.city} , state: ${user.location.state}`}</h3>\r\n                <h3>{`country: ${user.location.country} , postcode: ${user.location.postcode}`}</h3>\r\n                <button onClick={closeModal} className=\"ui secondary button\">\r\n                    Close\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({ closeModal: () => dispatch(closeInfoModal) })\r\n\r\nexport default connect(null,mapDispatchToProps)(Modal);","import React from 'react';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Header from \"./components/Header/Header\";\nimport MainPage from \"./pages/MainPage\";\nimport EditPage from \"./pages/EditPage\";\nimport { connect } from \"react-redux\";\nimport Modal from \"./components/Modal/Modal\";\n\nfunction App({ user }) {\n    return (\n        <div className=\"App\">\n            {user && <Modal user={user}/>}\n            <Header/>\n            <Switch>\n                <Redirect exact from='/' to=\"/main\"/>\n                <Route exact path='/main' component={MainPage}/>\n                <Route exact path='/edit' component={EditPage}/>\n            </Switch>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({ user: state.users.selectedUser })\n\nexport default connect(mapStateToProps)(App);\n","import { SEARCH_VALUE } from \"../actions\";\r\nimport { ADD_NATION } from \"../actions/filterActions\";\r\n\r\nconst initialState = {\r\n    searchValue: '',\r\n    nations: []\r\n};\r\n\r\nexport const filter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEARCH_VALUE:\r\n            return { ...state, searchValue: action.value };\r\n        case ADD_NATION:\r\n            if (action.check) {\r\n                return { ...state, nations: [...state.nations, action.nat] }\r\n            }\r\n            return { ...state, nations: state.nations.filter(item => item !== action.nat) }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    CHANGE_NATION,\r\n    CLOSE_INFO_MODAL,\r\n    FETCH_USERS_REQUEST,\r\n    FETCH_USERS_SUCCESS,\r\n    OPEN_INFO_MODAL\r\n} from \"../actions/usersActions\";\r\n\r\nconst initialState = {\r\n    users: [],\r\n    loading: false,\r\n    page: 1,\r\n    openedModal: false,\r\n    selectedUser: null\r\n};\r\n\r\nexport const users = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_USERS_REQUEST:\r\n            return { ...state, loading: true, page: state.page + 1 };\r\n        case FETCH_USERS_SUCCESS:\r\n            return { ...state, users: [...state.users, ...action.users], loading: false };\r\n        case CHANGE_NATION:\r\n            const idx = state.users.findIndex(user => user.email === action.mail);\r\n            const newUsers = [...state.users];\r\n            newUsers[idx].nat = action.nat;\r\n            return { ...state, users: newUsers };\r\n        case CLOSE_INFO_MODAL:\r\n            return { ...state, openedModal: false, selectedUser: null };\r\n        case OPEN_INFO_MODAL:\r\n            return { ...state, openedModal: true, selectedUser: action.user };\r\n        default:\r\n            return state\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport { filter } from \"./filterReducer\";\r\nimport { users} from \"./usersReducer\";\r\n\r\nexport default combineReducers({\r\n    filter,\r\n    users\r\n})","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport reducer from \"./reducers\";\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport { store };","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\n\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\n\nimport { store } from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>\n    , document.getElementById('root'));\n"],"sourceRoot":""}